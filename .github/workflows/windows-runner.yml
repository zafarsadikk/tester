name: Setup Windows Runner with Python and RustDesk

on:
  workflow_dispatch:

jobs:
  setup-windows:
    runs-on: windows-latest
    steps:
      - name: Install Python 3.10
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://www.python.org/ftp/python/3.10.11/python-3.10.11-amd64.exe" -OutFile "$env:TEMP\python-installer.exe" -UseBasicParsing
          Start-Process -FilePath "$env:TEMP\python-installer.exe" -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait
          Write-Host "Python version:"
          python --version

      - name: Install RustDesk (Portable)
        shell: pwsh
        run: |
          # Use the correct portable ZIP asset for RustDesk 1.2.3
          $RustDeskUrl = "https://github.com/rustdesk/rustdesk/releases/download/1.2.3/rustdesk-1.2.3-windows_x64-portable.zip"
          $RustDeskZip = "$env:TEMP\rustdesk.zip"
          $RustDeskExtractPath = "$env:TEMP\rustdesk"

          Write-Host "Downloading RustDesk portable ZIP..."
          Invoke-WebRequest -Uri $RustDeskUrl -OutFile $RustDeskZip -UseBasicParsing

          Write-Host "Extracting RustDesk..."
          Expand-Archive -Path $RustDeskZip -DestinationPath $RustDeskExtractPath -Force
          
          # Ensure the config directory exists so RustDesk can write its ID
          New-Item -ItemType Directory -Path "$env:APPDATA\RustDesk" -Force | Out-Null
          
          Write-Host "Starting RustDesk..."
          Start-Process -FilePath "$RustDeskExtractPath\rustdesk.exe"

      - name: Fetch RustDesk ID
        shell: pwsh
        run: |
          Write-Host "Waiting 20s for RustDesk to generate the ID..."
          Start-Sleep -Seconds 20
          $RustDeskIDPath = "$env:APPDATA\RustDesk\id"
          if (Test-Path $RustDeskIDPath) {
            $RustDeskID = Get-Content $RustDeskIDPath
            Write-Host "üöÄ RustDesk ID: $RustDeskID"
          } else {
            Write-Host "‚ö†Ô∏è RustDesk ID not found at $RustDeskIDPath. Check manually."
          }

      # Optional: Keep the runner alive for 30 minutes so you can connect
      - name: Keep Runner Alive for 30 Minutes
        shell: pwsh
        run: Start-Sleep -Seconds 1800
